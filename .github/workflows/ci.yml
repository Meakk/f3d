name: Cross Platform Build And Test

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - master

jobs:
  ci:
    if: github.event.pull_request.draft == false

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        vtk_version: [37fe47d99b1b7a802b737fa7d3d87b2d1187927d, v9.0.1]

    runs-on: ${{matrix.os}}
    container: ${{ matrix.os == 'ubuntu-latest' && 'ghcr.io/f3d-app/f3d-ci' || null }}

    env:
      DISPLAY: :0

    steps:
    - name: Dependencies Dir
      working-directory: ${{github.workspace}}
      run: mkdir dependencies

    - name: Cache OCCT
      id: cache-occt
      uses: actions/cache@v2
      with:
        path: dependencies/occt_install
        key: occt-test_b-V7_5_1-${{matrix.os}}

    # Checkout action does not work with non github repositories:
    # https://github.com/actions/checkout/issues/630
    - name: Setup OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      run: |
        mkdir occt_build
        mkdir occt_install
        git clone https://git.dev.opencascade.org/repos/occt.git
        cd occt
        git checkout V7_5_1
        git submodule update --init --recursive

    - name: Configure OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      run: >
        cmake ../occt
        -DBUILD_LIBRARY_TYPE=Static
        -DBUILD_ADDITIONAL_TOOLKITS="TKSTEP;TKIGES;TKMesh"
        -DBUILD_MODULE_ApplicationFramework=OFF
        -DBUILD_MODULE_DataExchange=OFF
        -DBUILD_MODULE_Draw=OFF
        -DBUILD_MODULE_FoundationClasses=OFF
        -DBUILD_MODULE_ModelingAlgorithms=OFF
        -DBUILD_MODULE_ModelingData=OFF
        -DBUILD_MODULE_Visualization=OFF
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX:PATH=../occt_install
        ${{ matrix.os == 'windows-latest' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded' || null }}

    - name: Build OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      run: cmake --build . --parallel 2 --target install --config Release

    - name: Patch OCCT install macos
      if: |
        steps.cache-occt.outputs.cache-hit != 'true' &&
        matrix.os == 'macos-latest'
      working-directory: ${{github.workspace}}/dependencies
      run: sed -i '' 's/OpenCASCADE_LIBRARIES [A-Za-z0-9;]\+/OpenCASCADE_LIBRARIES TKSTEP;TKSTEPAttr;TKSTEP209;TKSTEPBase;TKIGES;TKBool;TKMesh;TKXSBase;TKBO;TKPrim;TKShHealing;TKTopAlgo;TKBRep;TKGeomAlgo;TKGeomBase;TKG3d;TKG2d;TKMath;TKernel/' occt_install/lib/cmake/opencascade/OpenCASCADEConfig.cmake

    - name: Patch OCCT install ubuntu
      if: |
        steps.cache-occt.outputs.cache-hit != 'true' &&
        matrix.os == 'ubuntu-latest'
      working-directory: ${{github.workspace}}/dependencies
      run: sed -i 's/OpenCASCADE_LIBRARIES [A-Za-z0-9;]\+/OpenCASCADE_LIBRARIES TKSTEP;TKSTEPAttr;TKSTEP209;TKSTEPBase;TKIGES;TKBool;TKMesh;TKXSBase;TKBO;TKPrim;TKShHealing;TKTopAlgo;TKBRep;TKGeomAlgo;TKGeomBase;TKG3d;TKG2d;TKMath;TKernel/' occt_install/lib/cmake/opencascade/OpenCASCADEConfig.cmake


