name: Cross Platform Build And Test

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - master

jobs:
  ci:
    if: github.event.pull_request.draft == false

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        vtk_version: [37fe47d99b1b7a802b737fa7d3d87b2d1187927d, v9.0.1]

    runs-on: ${{matrix.os}}
    container: ${{ matrix.os == 'ubuntu-latest' && 'ghcr.io/f3d-app/f3d-ci' || null }}

    env:
      DISPLAY: :0

    steps:
    - name: Dependencies Dir
      working-directory: ${{github.workspace}}
      run: mkdir dependencies

    - name: Cache OCCT
      id: cache-occt
      uses: actions/cache@v2
      with:
        path: dependencies/occt_install
        key: occt-test_b-V7_5_1-${{matrix.os}}

    # Checkout action does not work with non github repositories:
    # https://github.com/actions/checkout/issues/630
    - name: Setup OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      run: |
        mkdir occt_build
        mkdir occt_install
        git clone https://git.dev.opencascade.org/repos/occt.git
        cd occt
        git checkout V7_5_1
        git submodule update --init --recursive

    - name: Configure OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      run: >
        cmake ../occt
        -DBUILD_LIBRARY_TYPE=Static
        -DBUILD_ADDITIONAL_TOOLKITS="TKSTEP;TKIGES;TKMesh"
        -DBUILD_MODULE_ApplicationFramework=OFF
        -DBUILD_MODULE_DataExchange=OFF
        -DBUILD_MODULE_Draw=OFF
        -DBUILD_MODULE_FoundationClasses=OFF
        -DBUILD_MODULE_ModelingAlgorithms=OFF
        -DBUILD_MODULE_ModelingData=OFF
        -DBUILD_MODULE_Visualization=OFF
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX:PATH=../occt_install
        ${{ matrix.os == 'windows-latest' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded' || null }}

    - name: Build OCCT
      if: steps.cache-occt.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/occt_build
      run: cmake --build . --parallel 2 --target install --config Release

    - name: Patch OCCT install macos
      if: |
        steps.cache-occt.outputs.cache-hit != 'true' &&
        matrix.os == 'macos-latest'
      working-directory: ${{github.workspace}}/dependencies
      run: sed -i '' 's/OpenCASCADE_LIBRARIES [A-Za-z0-9;]\+/OpenCASCADE_LIBRARIES TKSTEP;TKSTEPAttr;TKSTEP209;TKSTEPBase;TKIGES;TKBool;TKMesh;TKXSBase;TKBO;TKPrim;TKShHealing;TKTopAlgo;TKBRep;TKGeomAlgo;TKGeomBase;TKG3d;TKG2d;TKMath;TKernel/' occt_install/lib/cmake/opencascade/OpenCASCADEConfig.cmake

    - name: Patch OCCT install ubuntu
      if: |
        steps.cache-occt.outputs.cache-hit != 'true' &&
        matrix.os == 'ubuntu-latest'
      working-directory: ${{github.workspace}}/dependencies
      run: sed -i 's/OpenCASCADE_LIBRARIES [A-Za-z0-9;]\+/OpenCASCADE_LIBRARIES TKSTEP;TKSTEPAttr;TKSTEP209;TKSTEPBase;TKIGES;TKBool;TKMesh;TKXSBase;TKBO;TKPrim;TKShHealing;TKTopAlgo;TKBRep;TKGeomAlgo;TKGeomBase;TKG3d;TKG2d;TKMath;TKernel/' occt_install/lib/cmake/opencascade/OpenCASCADEConfig.cmake

    - name: Cache VTK
      id: cache-vtk
      uses: actions/cache@v2
      with:
        path: dependencies/vtk_install
        key: vtk-test-${{matrix.vtk_version}}-${{matrix.os}}

    - name: Setup VTK
      if: steps.cache-vtk.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies
      run: |
        mkdir vtk_build
        mkdir vtk_install

    - name: Checkout VTK
      if: steps.cache-vtk.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: Kitware/VTK
        submodules: 'true'
        path: './dependencies/vtk'
        ref: ${{matrix.vtk_version}}

    - name: Patch VTK 9.0.1 source macos
      if: |
        steps.cache-occt.outputs.cache-hit != 'true' &&
        matrix.os == 'macos-latest' &&
        matrix.vtk_version == 'v9.0.1'
      working-directory: ${{github.workspace}}/vtk
      run: sed -i '' '/^static herr_t H5F__update_super_ext_driver_msg.*;/a herr_t H5O__fsinfo_set_version(H5F_t *f, H5O_fsinfo_t *fsinfo);' ThirdParty/hdf5/vtkhdf5/src/H5Fsuper.c

    - name: Configure VTK
      if: steps.cache-vtk.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/vtk_build
      run: >
        cmake ../vtk
        -DVTK_ENABLE_LOGGING=OFF
        -DVTK_BUILD_TESTING=OFF
        -DCMAKE_BUILD_TYPE=Release
        -DVTK_LEGACY_REMOVE=ON
        -DBUILD_SHARED_LIBS=OFF
        -DCMAKE_INSTALL_PREFIX:PATH=../vtk_install
        -DVTK_GROUP_ENABLE_Rendering=DEFAULT
        -DVTK_GROUP_ENABLE_StandAlone=DEFAULT
        -DVTK_MODULE_ENABLE_VTK_CommonSystem=YES
        -DVTK_MODULE_ENABLE_VTK_FiltersGeneral=YES
        -DVTK_MODULE_ENABLE_VTK_FiltersGeometry=YES
        -DVTK_MODULE_ENABLE_VTK_ImagingCore=YES
        -DVTK_MODULE_ENABLE_VTK_ImagingHybrid=YES
        -DVTK_MODULE_ENABLE_VTK_InteractionStyle=YES
        -DVTK_MODULE_ENABLE_VTK_InteractionWidgets=YES
        -DVTK_MODULE_ENABLE_VTK_IOCityGML=YES
        -DVTK_MODULE_ENABLE_VTK_IOExodus=YES
        -DVTK_MODULE_ENABLE_VTK_IOGeometry=YES
        -DVTK_MODULE_ENABLE_VTK_IOImage=YES
        -DVTK_MODULE_ENABLE_VTK_IOImport=YES
        -DVTK_MODULE_ENABLE_VTK_IOParallel=YES
        -DVTK_MODULE_ENABLE_VTK_IOPLY=YES
        -DVTK_MODULE_ENABLE_VTK_IOXML=YES
        -DVTK_MODULE_ENABLE_VTK_RenderingAnnotation=YES
        -DVTK_MODULE_ENABLE_VTK_RenderingCore=YES
        -DVTK_MODULE_ENABLE_VTK_RenderingLabel=YES
        -DVTK_MODULE_ENABLE_VTK_RenderingOpenGL2=YES
        -DVTK_MODULE_ENABLE_VTK_RenderingVolumeOpenGL2=YES
        -DVTK_MODULE_ENABLE_VTK_jsoncpp=YES
        ${{ matrix.os == 'windows-latest' && '-Ax64 -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded' || null }}

    - name: Build VTK
      if: steps.cache-vtk.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/dependencies/vtk_build
      run: cmake --build . --parallel 2 --target install --config Release


